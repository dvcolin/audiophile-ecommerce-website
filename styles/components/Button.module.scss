@use '../abstracts/mixins' as *;

%base {
  background-color: var(--clr-bg);
  cursor: pointer;
}

%size-lg {
  padding: var(--spc-4) var(--spc-8);
}

%size-sm {
  padding: var(--spc-1);
}

%border-none {
  border: none;
}

%text-color-hover {
  &:hover {
    color: var(--clr-text-hover);
  }
}

%transition-base {
  transition: var(--tsn-normal);
}

%button-main {
  @extend %base;
  @extend %transition-base;
  color: var(--clr-text);
  font-size: var(--fs-xs);
  font-weight: var(--fw-bold);
  letter-spacing: var(--ls-wide);
  line-height: var(--lh-shorter);
  text-transform: uppercase;

  &:hover {
    background-color: var(--clr-bg-hover);
  }
}

// VARIANTS
.primary {
  @include button-props(primary);
  @extend %button-main;
  @extend %size-lg;
  @extend %border-none;
}

.secondary {
  @include button-props(secondary);
  @extend %button-main;
  @extend %size-lg;
  @extend %text-color-hover;
  border-width: var(--sz-border);
  border-color: var(--clr-border);
}

.tertiary {
  @include button-props(tertiary);
  @extend %button-main;
  @extend %size-sm;
  @extend %border-none;
  @extend %text-color-hover;
}

.icon {
  @include button-props(icon);
  @extend %base;
  @extend %size-sm;
  @extend %border-none;

  &.externalLink {
    display: inline-flex;

    &:hover {
      svg {
        fill: var(--clr-text-link-hover);
      }
    }

    svg {
      @extend %transition-base;
    }
  }

  svg {
    fill: var(--clr-text);
  }
}
